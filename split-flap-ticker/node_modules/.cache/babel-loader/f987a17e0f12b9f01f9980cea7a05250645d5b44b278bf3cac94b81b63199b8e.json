{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/components/SplitFlapDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SplitFlapDisplay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHARS = \"0123456789.,ABCDEFGHIJKLMNOPQRSTUVWXYZ $\";\nconst SplitFlapCell = ({\n  target,\n  duration = 50\n}) => {\n  _s();\n  const [current, setCurrent] = useState(target);\n  const [flipping, setFlipping] = useState(false);\n  useEffect(() => {\n    if (target === current) return;\n    setFlipping(true);\n    let currentIndex = CHARS.indexOf(current);\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % CHARS.length;\n      setCurrent(CHARS[currentIndex]);\n      if (CHARS[currentIndex] === target) {\n        clearInterval(interval);\n        setFlipping(false);\n      }\n    }, duration);\n    return () => clearInterval(interval);\n  }, [target, current, duration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `split-flap-cell ${flipping ? \"flipping\" : \"\"}`,\n    children: current\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitFlapCell, \"/PCUSpFp+TrWTeufWQzB44zFcJw=\");\n_c = SplitFlapCell;\nconst SplitFlapDisplay = ({\n  symbol,\n  price,\n  change\n}) => {\n  const displayText = `${symbol} // $${price}`;\n  const changeColor = change > 0 ? \"green\" : \"red\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-flap-display\",\n    children: [displayText.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: char.toUpperCase()\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-flap-cell\",\n      style: {\n        backgroundColor: changeColor,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SplitFlapDisplay;\nexport default SplitFlapDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"SplitFlapCell\");\n$RefreshReg$(_c2, \"SplitFlapDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CHARS","SplitFlapCell","target","duration","_s","current","setCurrent","flipping","setFlipping","currentIndex","indexOf","interval","setInterval","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SplitFlapDisplay","symbol","price","change","displayText","changeColor","split","map","char","index","toUpperCase","style","backgroundColor","width","height","_c2","$RefreshReg$"],"sources":["/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/components/SplitFlapDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./SplitFlapDisplay.css\";\n\nconst CHARS = \"0123456789.,ABCDEFGHIJKLMNOPQRSTUVWXYZ $\";\n\nconst SplitFlapCell = ({ target, duration = 50 }) => {\n  const [current, setCurrent] = useState(target);\n  const [flipping, setFlipping] = useState(false);\n\n  useEffect(() => {\n    if (target === current) return;\n\n    setFlipping(true);\n    let currentIndex = CHARS.indexOf(current);\n\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % CHARS.length;\n      setCurrent(CHARS[currentIndex]);\n\n      if (CHARS[currentIndex] === target) {\n        clearInterval(interval);\n        setFlipping(false);\n      }\n    }, duration);\n\n    return () => clearInterval(interval);\n  }, [target, current, duration]);\n\n  return (\n    <div className={`split-flap-cell ${flipping ? \"flipping\" : \"\"}`}>\n      {current}\n    </div>\n  );\n};\n\nconst SplitFlapDisplay = ({ symbol, price, change }) => {\n  const displayText = `${symbol} // $${price}`;\n  const changeColor = change > 0 ? \"green\" : \"red\";\n\n  return (\n    <div className=\"split-flap-display\">\n      {displayText.split(\"\").map((char, index) => (\n        <SplitFlapCell key={index} target={char.toUpperCase()} />\n      ))}\n      <div\n        className=\"split-flap-cell\"\n        style={{\n          backgroundColor: changeColor,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SplitFlapDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAG,0CAA0C;AAExD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACK,MAAM,CAAC;EAC9C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,KAAKG,OAAO,EAAE;IAExBG,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIC,YAAY,GAAGT,KAAK,CAACU,OAAO,CAACL,OAAO,CAAC;IAEzC,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCH,YAAY,GAAG,CAACA,YAAY,GAAG,CAAC,IAAIT,KAAK,CAACa,MAAM;MAChDP,UAAU,CAACN,KAAK,CAACS,YAAY,CAAC,CAAC;MAE/B,IAAIT,KAAK,CAACS,YAAY,CAAC,KAAKP,MAAM,EAAE;QAClCY,aAAa,CAACH,QAAQ,CAAC;QACvBH,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC,EAAEL,QAAQ,CAAC;IAEZ,OAAO,MAAMW,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACT,MAAM,EAAEG,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAE/B,oBACEJ,OAAA;IAAKgB,SAAS,EAAE,mBAAmBR,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAS,QAAA,EAC7DX;EAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BIH,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA8BnB,MAAMqB,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EACtD,MAAMC,WAAW,GAAG,GAAGH,MAAM,QAAQC,KAAK,EAAE;EAC5C,MAAMG,WAAW,GAAGF,MAAM,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK;EAEhD,oBACE1B,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChCU,WAAW,CAACE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrChC,OAAA,CAACE,aAAa;MAAaC,MAAM,EAAE4B,IAAI,CAACE,WAAW,CAAC;IAAE,GAAlCD,KAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B,CACzD,CAAC,eACFrB,OAAA;MACEgB,SAAS,EAAC,iBAAiB;MAC3BkB,KAAK,EAAE;QACLC,eAAe,EAAEP,WAAW;QAC5BQ,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV;IAAE;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACiB,GAAA,GAnBIf,gBAAgB;AAqBtB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}