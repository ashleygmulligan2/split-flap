{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport SplitFlapDisplay from \"./components/SplitFlapDisplay\";\n\n// Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALPHA_VANTAGE_API_KEY = \"D1OVGLNPM5ZHM0K1\";\n\n// CoinGecko API key\nconst COINGECKO_API_KEY = \"CG-B9dykQhgqEKR5vrUKsCvBzap\";\nconst SYMBOLS = {\n  crypto: [\"bitcoin\", \"cardano\"],\n  // CoinGecko IDs\n  stocks: [\"CIFR\", \"MSTR\", \"TSLA\", \"FBTC\", \"SPX\", \"DJI\"] // Stock symbols\n};\nconst DISPLAY_NAMES = {\n  bitcoin: \"BTC\",\n  cardano: \"ADA\"\n};\nconst REFRESH_INTERVAL = 6000; // 1 minute\n\nconst generateMockData = () => {\n  return {\n    cryptoPrices: {\n      bitcoin: Math.random() * 100000,\n      cardano: Math.random() * 5\n    },\n    cryptoChanges: {\n      bitcoin: (Math.random() - 0.5) * 2,\n      cardano: (Math.random() - 0.5) * 2\n    },\n    stockPrices: {\n      CIFR: Math.random() * 20,\n      MSTR: Math.random() * 1000,\n      TSLA: Math.random() * 1000,\n      FBTC: Math.random() * 100,\n      SPX: Math.random() * 5000,\n      DJI: Math.random() * 40000\n    },\n    stockChanges: {\n      CIFR: (Math.random() - 0.5) * 2,\n      MSTR: (Math.random() - 0.5) * 2,\n      TSLA: (Math.random() - 0.5) * 2,\n      FBTC: (Math.random() - 0.5) * 2,\n      SPX: (Math.random() - 0.5) * 2,\n      DJI: (Math.random() - 0.5) * 2\n    }\n  };\n};\nfunction App() {\n  _s();\n  const [prices, setPrices] = useState({});\n  const [changes, setChanges] = useState({});\n  const [soundEnabled, setSoundEnabled] = useState(false);\n  const audioRef = useRef(new Audio(\"/sound.m4a\"));\n  const fetchAllPrices = () => {\n    const {\n      cryptoPrices,\n      cryptoChanges,\n      stockPrices,\n      stockChanges\n    } = generateMockData();\n    setPrices({\n      ...cryptoPrices,\n      ...stockPrices\n    });\n    setChanges({\n      ...cryptoChanges,\n      ...stockChanges\n    });\n    if (soundEnabled) {\n      audioRef.current.play().catch(error => {\n        console.error(\"Audio play failed:\", error);\n      });\n    }\n  };\n  useEffect(() => {\n    fetchAllPrices();\n    const interval = setInterval(fetchAllPrices, REFRESH_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    };\n  }, [soundEnabled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticker-container\",\n      children: [...SYMBOLS.crypto, ...SYMBOLS.stocks].map(symbol => {\n        var _prices$symbol;\n        return /*#__PURE__*/_jsxDEV(SplitFlapDisplay, {\n          symbol: DISPLAY_NAMES[symbol] || symbol.toUpperCase(),\n          price: ((_prices$symbol = prices[symbol]) === null || _prices$symbol === void 0 ? void 0 : _prices$symbol.toFixed(2)) || \"0.00\",\n          change: changes[symbol]\n        }, symbol, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), !soundEnabled && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"enable-sound-button\",\n      onClick: () => setSoundEnabled(true),\n      children: \"Enable Sound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5U/k10WNzM6AvT6A2YF/VfacfEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","SplitFlapDisplay","jsxDEV","_jsxDEV","ALPHA_VANTAGE_API_KEY","COINGECKO_API_KEY","SYMBOLS","crypto","stocks","DISPLAY_NAMES","bitcoin","cardano","REFRESH_INTERVAL","generateMockData","cryptoPrices","Math","random","cryptoChanges","stockPrices","CIFR","MSTR","TSLA","FBTC","SPX","DJI","stockChanges","App","_s","prices","setPrices","changes","setChanges","soundEnabled","setSoundEnabled","audioRef","Audio","fetchAllPrices","current","play","catch","error","console","interval","setInterval","clearInterval","pause","currentTime","className","children","map","symbol","_prices$symbol","toUpperCase","price","toFixed","change","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport SplitFlapDisplay from \"./components/SplitFlapDisplay\";\n\n// Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\nconst ALPHA_VANTAGE_API_KEY = \"D1OVGLNPM5ZHM0K1\";\n\n// CoinGecko API key\nconst COINGECKO_API_KEY = \"CG-B9dykQhgqEKR5vrUKsCvBzap\";\n\nconst SYMBOLS = {\n  crypto: [\"bitcoin\", \"cardano\"], // CoinGecko IDs\n  stocks: [\"CIFR\", \"MSTR\", \"TSLA\", \"FBTC\", \"SPX\", \"DJI\"], // Stock symbols\n};\n\nconst DISPLAY_NAMES = {\n  bitcoin: \"BTC\",\n  cardano: \"ADA\",\n};\n\nconst REFRESH_INTERVAL = 6000; // 1 minute\n\nconst generateMockData = () => {\n  return {\n    cryptoPrices: {\n      bitcoin: Math.random() * 100000,\n      cardano: Math.random() * 5,\n    },\n    cryptoChanges: {\n      bitcoin: (Math.random() - 0.5) * 2,\n      cardano: (Math.random() - 0.5) * 2,\n    },\n    stockPrices: {\n      CIFR: Math.random() * 20,\n      MSTR: Math.random() * 1000,\n      TSLA: Math.random() * 1000,\n      FBTC: Math.random() * 100,\n      SPX: Math.random() * 5000,\n      DJI: Math.random() * 40000,\n    },\n    stockChanges: {\n      CIFR: (Math.random() - 0.5) * 2,\n      MSTR: (Math.random() - 0.5) * 2,\n      TSLA: (Math.random() - 0.5) * 2,\n      FBTC: (Math.random() - 0.5) * 2,\n      SPX: (Math.random() - 0.5) * 2,\n      DJI: (Math.random() - 0.5) * 2,\n    },\n  };\n};\n\nfunction App() {\n  const [prices, setPrices] = useState({});\n  const [changes, setChanges] = useState({});\n  const [soundEnabled, setSoundEnabled] = useState(false);\n  const audioRef = useRef(new Audio(\"/sound.m4a\"));\n\n  const fetchAllPrices = () => {\n    const { cryptoPrices, cryptoChanges, stockPrices, stockChanges } =\n      generateMockData();\n    setPrices({ ...cryptoPrices, ...stockPrices });\n    setChanges({ ...cryptoChanges, ...stockChanges });\n\n    if (soundEnabled) {\n      audioRef.current.play().catch((error) => {\n        console.error(\"Audio play failed:\", error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchAllPrices();\n    const interval = setInterval(fetchAllPrices, REFRESH_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    };\n  }, [soundEnabled]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"ticker-container\">\n        {[...SYMBOLS.crypto, ...SYMBOLS.stocks].map((symbol) => (\n          <SplitFlapDisplay\n            key={symbol}\n            symbol={DISPLAY_NAMES[symbol] || symbol.toUpperCase()}\n            price={prices[symbol]?.toFixed(2) || \"0.00\"}\n            change={changes[symbol]}\n          />\n        ))}\n      </div>\n      {!soundEnabled && (\n        <button\n          className=\"enable-sound-button\"\n          onClick={() => setSoundEnabled(true)}\n        >\n          Enable Sound\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}