{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SplitFlapDisplay from \"./components/SplitFlapDisplay\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOLS = [\"BTC-USD\", \"CIFR\", \"TSLA\"];\nconst REFRESH_INTERVAL = 10000; // 10 seconds\n\nfunction App() {\n  _s();\n  const [prices, setPrices] = useState({});\n  const fetchPrices = async () => {\n    try {\n      const responses = await Promise.all(SYMBOLS.map(symbol => fetch(`https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`).then(res => res.json())));\n      const newPrices = {};\n      responses.forEach((response, index) => {\n        const price = response.chart.result[0].meta.regularMarketPrice;\n        newPrices[SYMBOLS[index]] = price.toFixed(2);\n      });\n      setPrices(newPrices);\n    } catch (error) {\n      console.error(\"Error fetching prices:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPrices();\n    const interval = setInterval(fetchPrices, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticker-container\",\n      children: SYMBOLS.map(symbol => /*#__PURE__*/_jsxDEV(SplitFlapDisplay, {\n        symbol: symbol,\n        price: prices[symbol] || \"0.00\"\n      }, symbol, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AyDZng7+aEBipOGwqaguTBzobZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SplitFlapDisplay","jsxDEV","_jsxDEV","SYMBOLS","REFRESH_INTERVAL","App","_s","prices","setPrices","fetchPrices","responses","Promise","all","map","symbol","fetch","then","res","json","newPrices","forEach","response","index","price","chart","result","meta","regularMarketPrice","toFixed","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SplitFlapDisplay from \"./components/SplitFlapDisplay\";\nimport \"./App.css\";\n\nconst SYMBOLS = [\"BTC-USD\", \"CIFR\", \"TSLA\"];\nconst REFRESH_INTERVAL = 10000; // 10 seconds\n\nfunction App() {\n  const [prices, setPrices] = useState({});\n\n  const fetchPrices = async () => {\n    try {\n      const responses = await Promise.all(\n        SYMBOLS.map((symbol) =>\n          fetch(\n            `https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`\n          ).then((res) => res.json())\n        )\n      );\n\n      const newPrices = {};\n      responses.forEach((response, index) => {\n        const price = response.chart.result[0].meta.regularMarketPrice;\n        newPrices[SYMBOLS[index]] = price.toFixed(2);\n      });\n\n      setPrices(newPrices);\n    } catch (error) {\n      console.error(\"Error fetching prices:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPrices();\n    const interval = setInterval(fetchPrices, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"ticker-container\">\n        {SYMBOLS.map((symbol) => (\n          <SplitFlapDisplay\n            key={symbol}\n            symbol={symbol}\n            price={prices[symbol] || \"0.00\"}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,OAAO,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC;AAC3C,MAAMC,gBAAgB,GAAG,KAAK,CAAC,CAAC;;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCT,OAAO,CAACU,GAAG,CAAEC,MAAM,IACjBC,KAAK,CACH,qDAAqDD,MAAM,EAC7D,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAC5B,CACF,CAAC;MAED,MAAMC,SAAS,GAAG,CAAC,CAAC;MACpBT,SAAS,CAACU,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACrC,MAAMC,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,kBAAkB;QAC9DR,SAAS,CAAChB,OAAO,CAACmB,KAAK,CAAC,CAAC,GAAGC,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;MAC9C,CAAC,CAAC;MAEFpB,SAAS,CAACW,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC;IACb,MAAMsB,QAAQ,GAAGC,WAAW,CAACvB,WAAW,EAAEL,gBAAgB,CAAC;IAC3D,OAAO,MAAM6B,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjC,OAAA;MAAKgC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BhC,OAAO,CAACU,GAAG,CAAEC,MAAM,iBAClBZ,OAAA,CAACF,gBAAgB;QAEfc,MAAM,EAAEA,MAAO;QACfS,KAAK,EAAEhB,MAAM,CAACO,MAAM,CAAC,IAAI;MAAO,GAF3BA,MAAM;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA5CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}