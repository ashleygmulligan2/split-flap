{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/components/SplitFlapDisplay.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SplitFlapDisplay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHARS = \"0123456789.,ABCDEFGHIJKLMNOPQRSTUVWXYZ $%-/\";\nconst SplitFlapCell = ({\n  target,\n  duration = 50,\n  style,\n  playSound\n}) => {\n  _s();\n  const [current, setCurrent] = useState(target);\n  const [flipping, setFlipping] = useState(false);\n  useEffect(() => {\n    if (target === current) return;\n    setFlipping(true);\n    let currentIndex = CHARS.indexOf(current);\n\n    // Play flip sound\n    const audio = new Audio(\"/sound.m4a\");\n    if (playSound) {\n      audio.play();\n    }\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % CHARS.length;\n      setCurrent(CHARS[currentIndex]);\n      if (CHARS[currentIndex] === target) {\n        clearInterval(interval);\n        setFlipping(false);\n        // Stop the sound\n        audio.pause();\n        audio.currentTime = 0; // Reset the audio to the start\n      }\n    }, duration);\n    return () => {\n      clearInterval(interval);\n      // Ensure the sound stops if the component unmounts\n      audio.pause();\n      audio.currentTime = 0;\n    };\n  }, [target, current, duration, playSound]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `split-flap-cell ${flipping ? \"flipping\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: style,\n      children: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitFlapCell, \"/PCUSpFp+TrWTeufWQzB44zFcJw=\");\n_c = SplitFlapCell;\nconst SplitFlapDisplay = ({\n  symbol,\n  price,\n  change\n}) => {\n  _s2();\n  const [soundEnabled, setSoundEnabled] = useState(false);\n  const changeColor = change > 0 ? \"#009a44\" : \"#da291c\";\n  const changeSign = change < 0 ? \"-\" : \" \";\n  const changeText = `${Math.abs(change).toFixed(1)}%`;\n  const priceText = `$${Math.ceil(price).toLocaleString()}`;\n\n  // Define a color mapping for each ticker\n  const tickerColors = {\n    BTC: \"#f7931a\",\n    // Bitcoin\n    ADA: \"#0033ad\",\n    // Cardano\n    CIFR: \"#ff6600\",\n    // Example color for CIFR\n    MSTR: \"#ff0000\",\n    // Example color for MSTR\n    TSLA: \"#cc0000\",\n    // Example color for TSLA\n    FBTC: \"#00cc00\",\n    // Example color for FBTC\n    SPX: \"#0000cc\",\n    // Example color for SPX\n    DJI: \"#cccc00\" // Example color for DJI\n  };\n\n  // Get the color for the current ticker symbol\n  const tickerColor = tickerColors[symbol] || \"#2a2a2a\"; // Default color if not specified\n\n  // Ensure the ticker symbol is at least 4 characters long\n  const paddedSymbol = symbol.padEnd(4, \" \");\n  const paddedChangeText = changeText.padEnd(5, \" \"); // Reduced to 5 cells for change\n  const paddedPriceText = priceText.padStart(8, \" \"); // Assuming 8 cells for price\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-flap-display\",\n    style: {\n      padding: \"10px\",\n      borderRadius: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSoundEnabled(true),\n      children: \"Enable Sound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: \" \",\n      style: {\n        backgroundColor: tickerColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), paddedSymbol.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: char.toUpperCase(),\n      playSound: soundEnabled\n    }, `symbol-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: changeSign,\n      playSound: soundEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), paddedChangeText.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: char.toUpperCase(),\n      playSound: soundEnabled\n    }, `change-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: \" \",\n      style: {\n        backgroundColor: changeColor\n      },\n      playSound: soundEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), paddedPriceText.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: char.toUpperCase(),\n      playSound: soundEnabled\n    }, `price-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(SplitFlapCell, {\n      target: \" \",\n      style: {\n        backgroundColor: tickerColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s2(SplitFlapDisplay, \"8/aJvt4T//uUHvJHrEnBo/Bvtc4=\");\n_c2 = SplitFlapDisplay;\nexport default SplitFlapDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"SplitFlapCell\");\n$RefreshReg$(_c2, \"SplitFlapDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CHARS","SplitFlapCell","target","duration","style","playSound","_s","current","setCurrent","flipping","setFlipping","currentIndex","indexOf","audio","Audio","play","interval","setInterval","length","clearInterval","pause","currentTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SplitFlapDisplay","symbol","price","change","_s2","soundEnabled","setSoundEnabled","changeColor","changeSign","changeText","Math","abs","toFixed","priceText","ceil","toLocaleString","tickerColors","BTC","ADA","CIFR","MSTR","TSLA","FBTC","SPX","DJI","tickerColor","paddedSymbol","padEnd","paddedChangeText","paddedPriceText","padStart","padding","borderRadius","onClick","backgroundColor","split","map","char","index","toUpperCase","_c2","$RefreshReg$"],"sources":["/Users/ashleymulligan/Documents/GitHub/split-flap/split-flap-ticker/src/components/SplitFlapDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./SplitFlapDisplay.css\";\n\nconst CHARS = \"0123456789.,ABCDEFGHIJKLMNOPQRSTUVWXYZ $%-/\";\n\nconst SplitFlapCell = ({ target, duration = 50, style, playSound }) => {\n  const [current, setCurrent] = useState(target);\n  const [flipping, setFlipping] = useState(false);\n\n  useEffect(() => {\n    if (target === current) return;\n\n    setFlipping(true);\n    let currentIndex = CHARS.indexOf(current);\n\n    // Play flip sound\n    const audio = new Audio(\"/sound.m4a\");\n    if (playSound) {\n      audio.play();\n    }\n\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % CHARS.length;\n      setCurrent(CHARS[currentIndex]);\n\n      if (CHARS[currentIndex] === target) {\n        clearInterval(interval);\n        setFlipping(false);\n        // Stop the sound\n        audio.pause();\n        audio.currentTime = 0; // Reset the audio to the start\n      }\n    }, duration);\n\n    return () => {\n      clearInterval(interval);\n      // Ensure the sound stops if the component unmounts\n      audio.pause();\n      audio.currentTime = 0;\n    };\n  }, [target, current, duration, playSound]);\n\n  return (\n    <div className={`split-flap-cell ${flipping ? \"flipping\" : \"\"}`}>\n      <span style={style}>{current}</span>\n    </div>\n  );\n};\n\nconst SplitFlapDisplay = ({ symbol, price, change }) => {\n  const [soundEnabled, setSoundEnabled] = useState(false);\n\n  const changeColor = change > 0 ? \"#009a44\" : \"#da291c\";\n  const changeSign = change < 0 ? \"-\" : \" \";\n  const changeText = `${Math.abs(change).toFixed(1)}%`;\n  const priceText = `$${Math.ceil(price).toLocaleString()}`;\n\n  // Define a color mapping for each ticker\n  const tickerColors = {\n    BTC: \"#f7931a\", // Bitcoin\n    ADA: \"#0033ad\", // Cardano\n    CIFR: \"#ff6600\", // Example color for CIFR\n    MSTR: \"#ff0000\", // Example color for MSTR\n    TSLA: \"#cc0000\", // Example color for TSLA\n    FBTC: \"#00cc00\", // Example color for FBTC\n    SPX: \"#0000cc\", // Example color for SPX\n    DJI: \"#cccc00\", // Example color for DJI\n  };\n\n  // Get the color for the current ticker symbol\n  const tickerColor = tickerColors[symbol] || \"#2a2a2a\"; // Default color if not specified\n\n  // Ensure the ticker symbol is at least 4 characters long\n  const paddedSymbol = symbol.padEnd(4, \" \");\n  const paddedChangeText = changeText.padEnd(5, \" \"); // Reduced to 5 cells for change\n  const paddedPriceText = priceText.padStart(8, \" \"); // Assuming 8 cells for price\n\n  return (\n    <div\n      className=\"split-flap-display\"\n      style={{ padding: \"10px\", borderRadius: \"8px\" }}\n    >\n      <button onClick={() => setSoundEnabled(true)}>Enable Sound</button>\n      <SplitFlapCell target=\" \" style={{ backgroundColor: tickerColor }} />\n      {/* Ticker Symbol */}\n      {paddedSymbol.split(\"\").map((char, index) => (\n        <SplitFlapCell\n          key={`symbol-${index}`}\n          target={char.toUpperCase()}\n          playSound={soundEnabled}\n        />\n      ))}\n      <SplitFlapCell target=\" \" />\n\n      {/* Change Sign */}\n      <SplitFlapCell target={changeSign} playSound={soundEnabled} />\n\n      {/* Percentage Change */}\n      {paddedChangeText.split(\"\").map((char, index) => (\n        <SplitFlapCell\n          key={`change-${index}`}\n          target={char.toUpperCase()}\n          playSound={soundEnabled}\n        />\n      ))}\n      {/* Change Indicator */}\n      <SplitFlapCell\n        target=\" \"\n        style={{ backgroundColor: changeColor }}\n        playSound={soundEnabled}\n      />\n\n      {/* Current Price */}\n      {paddedPriceText.split(\"\").map((char, index) => (\n        <SplitFlapCell\n          key={`price-${index}`}\n          target={char.toUpperCase()}\n          playSound={soundEnabled}\n        />\n      ))}\n      <SplitFlapCell target=\" \" style={{ backgroundColor: tickerColor }} />\n    </div>\n  );\n};\n\nexport default SplitFlapDisplay;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAG,6CAA6C;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ,GAAG,EAAE;EAAEC,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACK,MAAM,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,KAAKK,OAAO,EAAE;IAExBG,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIC,YAAY,GAAGX,KAAK,CAACY,OAAO,CAACL,OAAO,CAAC;;IAEzC;IACA,MAAMM,KAAK,GAAG,IAAIC,KAAK,CAAC,YAAY,CAAC;IACrC,IAAIT,SAAS,EAAE;MACbQ,KAAK,CAACE,IAAI,CAAC,CAAC;IACd;IAEA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCN,YAAY,GAAG,CAACA,YAAY,GAAG,CAAC,IAAIX,KAAK,CAACkB,MAAM;MAChDV,UAAU,CAACR,KAAK,CAACW,YAAY,CAAC,CAAC;MAE/B,IAAIX,KAAK,CAACW,YAAY,CAAC,KAAKT,MAAM,EAAE;QAClCiB,aAAa,CAACH,QAAQ,CAAC;QACvBN,WAAW,CAAC,KAAK,CAAC;QAClB;QACAG,KAAK,CAACO,KAAK,CAAC,CAAC;QACbP,KAAK,CAACQ,WAAW,GAAG,CAAC,CAAC,CAAC;MACzB;IACF,CAAC,EAAElB,QAAQ,CAAC;IAEZ,OAAO,MAAM;MACXgB,aAAa,CAACH,QAAQ,CAAC;MACvB;MACAH,KAAK,CAACO,KAAK,CAAC,CAAC;MACbP,KAAK,CAACQ,WAAW,GAAG,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACnB,MAAM,EAAEK,OAAO,EAAEJ,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAE1C,oBACEN,OAAA;IAAKuB,SAAS,EAAE,mBAAmBb,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAc,QAAA,eAC9DxB,OAAA;MAAMK,KAAK,EAAEA,KAAM;MAAAmB,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CIL,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA4CnB,MAAM4B,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,GAAA;EACtD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMuC,WAAW,GAAGJ,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,SAAS;EACtD,MAAMK,UAAU,GAAGL,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EACzC,MAAMM,UAAU,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACR,MAAM,CAAC,CAACS,OAAO,CAAC,CAAC,CAAC,GAAG;EACpD,MAAMC,SAAS,GAAG,IAAIH,IAAI,CAACI,IAAI,CAACZ,KAAK,CAAC,CAACa,cAAc,CAAC,CAAC,EAAE;;EAEzD;EACA,MAAMC,YAAY,GAAG;IACnBC,GAAG,EAAE,SAAS;IAAE;IAChBC,GAAG,EAAE,SAAS;IAAE;IAChBC,IAAI,EAAE,SAAS;IAAE;IACjBC,IAAI,EAAE,SAAS;IAAE;IACjBC,IAAI,EAAE,SAAS;IAAE;IACjBC,IAAI,EAAE,SAAS;IAAE;IACjBC,GAAG,EAAE,SAAS;IAAE;IAChBC,GAAG,EAAE,SAAS,CAAE;EAClB,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGT,YAAY,CAACf,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC;;EAEvD;EACA,MAAMyB,YAAY,GAAGzB,MAAM,CAAC0B,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1C,MAAMC,gBAAgB,GAAGnB,UAAU,CAACkB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACpD,MAAME,eAAe,GAAGhB,SAAS,CAACiB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEpD,oBACE5D,OAAA;IACEuB,SAAS,EAAC,oBAAoB;IAC9BlB,KAAK,EAAE;MAAEwD,OAAO,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAtC,QAAA,gBAEhDxB,OAAA;MAAQ+D,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAAC,IAAI,CAAE;MAAAZ,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnE5B,OAAA,CAACE,aAAa;MAACC,MAAM,EAAC,GAAG;MAACE,KAAK,EAAE;QAAE2D,eAAe,EAAET;MAAY;IAAE;MAAA9B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEpE4B,YAAY,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtCpE,OAAA,CAACE,aAAa;MAEZC,MAAM,EAAEgE,IAAI,CAACE,WAAW,CAAC,CAAE;MAC3B/D,SAAS,EAAE6B;IAAa,GAFnB,UAAUiC,KAAK,EAAE;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvB,CACF,CAAC,eACF5B,OAAA,CAACE,aAAa;MAACC,MAAM,EAAC;IAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG5B5B,OAAA,CAACE,aAAa;MAACC,MAAM,EAAEmC,UAAW;MAAChC,SAAS,EAAE6B;IAAa;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG7D8B,gBAAgB,CAACO,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1CpE,OAAA,CAACE,aAAa;MAEZC,MAAM,EAAEgE,IAAI,CAACE,WAAW,CAAC,CAAE;MAC3B/D,SAAS,EAAE6B;IAAa,GAFnB,UAAUiC,KAAK,EAAE;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvB,CACF,CAAC,eAEF5B,OAAA,CAACE,aAAa;MACZC,MAAM,EAAC,GAAG;MACVE,KAAK,EAAE;QAAE2D,eAAe,EAAE3B;MAAY,CAAE;MACxC/B,SAAS,EAAE6B;IAAa;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAGD+B,eAAe,CAACM,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzCpE,OAAA,CAACE,aAAa;MAEZC,MAAM,EAAEgE,IAAI,CAACE,WAAW,CAAC,CAAE;MAC3B/D,SAAS,EAAE6B;IAAa,GAFnB,SAASiC,KAAK,EAAE;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtB,CACF,CAAC,eACF5B,OAAA,CAACE,aAAa;MAACC,MAAM,EAAC,GAAG;MAACE,KAAK,EAAE;QAAE2D,eAAe,EAAET;MAAY;IAAE;MAAA9B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACM,GAAA,CA1EIJ,gBAAgB;AAAAwC,GAAA,GAAhBxC,gBAAgB;AA4EtB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAAyC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}